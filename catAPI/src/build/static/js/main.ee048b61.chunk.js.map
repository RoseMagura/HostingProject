{"version":3,"sources":["components/EditButton.tsx","components/DefaultButton.tsx","components/Comment.tsx","components/CommentList.tsx","components/ImageModal.tsx","components/Image.tsx","components/Home.tsx","components/Login.tsx","components/UserModal.tsx","components/User.tsx","components/UserList.tsx","components/AppHeader.tsx","components/Signup.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["EditButton","props","Button","onClick","item","DefaultButton","id","name","Comment","useState","editing","setEditing","text","setText","admin","localStorage","getItem","userId","undefined","user","firstName","lastName","TextField","type","placeholder","String","onChange","event","target","value","edit","delete","CommentList","commentText","comments","setComments","imageId","useEffect","concat","array","createComment","preventDefault","token","fetch","process","method","headers","Headers","body","JSON","stringify","then","res","a","status","alert","statusText","json","deleteComment","response","filteredComments","filter","c","editComment","commentId","loaded","editedComments","map","push","comment","key","loginStatus","onSubmit","label","onKeyDown","ev","e","ImageModal","title","url","newUrl","setUrl","newTitle","setTitle","className","variant","func","changed","Image","myProps","apiResponse","setResponse","likes","setLikes","alreadyLiked","setLike","myLike","setMyLike","loggedIn","setLogin","hover","setHover","fetchLikes","result","likeList","length","x","commentList","updateRes","obj","info","Number","src","alt","Authorization","newLikes","l","onMouseEnter","onMouseLeave","style","listStyle","Home","Boolean","selectedImages","setSelected","postResponse","displayForm","toggleDisplay","fetchAll","apiUrl","imageList","data","forEach","element","catch","error","console","toggleDisplayForm","deleteImage","window","confirm","feedback","filteredImages","img","image","Login","username","setUsername","password","setPassword","setStatus","hidden","toggleShow","history","useHistory","AppBar","position","background","Toolbar","flex","Typography","noValidate","cred","setItem","IconButton","to","UserModal","newUsername","newPassword","setConfirmPassword","newFirstName","setFirstName","newLastName","setLastName","val","newAdmin","setAdmin","origPwd","setOrigPwd","passwordError","setPwdErr","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","putBody","replace","disabled","User","activeUser","deleteFunc","active","adminStatus","setAdminStatus","processResponse","newAdminStatus","UserList","users","setUsers","deleteUser","filteredUsers","u","AppHeader","exact","activeStyle","fontWeight","Signup","passwordRepeat","setRepeat","log","App","update","removeItem","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"qQAGaA,EAAa,SAACC,GAIvB,OACI,cAACC,EAAA,EAAD,CAAQC,QAJQ,WAChBF,EAAME,QAAQF,EAAMG,OAGpB,mBCLKC,EAAgB,SAACJ,GAI1B,OACI,cAACC,EAAA,EAAD,CAAQC,QAJQ,WAChBF,EAAME,QAAQF,EAAMK,KAGpB,SAA+BL,EAAMM,Q,SCHhCC,EAAU,SAACP,GAA6B,IAAD,EAClBQ,oBAAS,GADS,mBACzCC,EADyC,KAChCC,EADgC,OAExBF,mBAASR,EAAMW,MAFS,mBAEzCA,EAFyC,KAEnCC,EAFmC,KAI1CC,EAA0C,SAAlCC,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,MAmBpC,OACI,gCACKN,EACK,+CACqBQ,IAAfjB,EAAMkB,MAAsBlB,EAAMkB,KAAKC,UAD7C,iBACyEF,IAAfjB,EAAMkB,MAAsBlB,EAAMkB,KAAKE,SADjG,KAEE,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,YAAaC,OAAOxB,EAAMW,MAC1Bc,SArBC,SAACC,GAClBd,EAAQc,EAAMC,OAAOC,UAsBT,cAAC3B,EAAA,EAAD,CAAQC,QAnBT,WACXF,EAAM6B,KAAK7B,EAAMK,GAAIM,GACrBD,GAAW,IAiBC,4BACA,cAACT,EAAA,EAAD,CAAQC,QAfT,WACXQ,GAAW,IAcC,uBAEF,6CACqBO,IAAfjB,EAAMkB,MAAsBlB,EAAMkB,KAAKC,UAD7C,iBACyEF,IAAfjB,EAAMkB,MAAsBlB,EAAMkB,KAAKE,SADjG,2CAEYpB,EAAMW,SAItBE,GAASW,OAAOxB,EAAMgB,UAAYA,IAChC,gCACI,cAAC,EAAD,CAAed,QAAS,kBAAMF,EAAM8B,OAAO9B,EAAMK,KAAKC,KAAK,WAC3D,cAAC,EAAD,CAAeJ,QAvClB,WACTQ,GAAW,IAsC+BJ,KAAK,gBCxC1CyB,EAAc,SAAC/B,GAA6B,IAAD,EACrBQ,mBAAS,IADY,mBAC7CwB,EAD6C,KAChCpB,EADgC,OAEpBJ,mBAA6B,IAFT,mBAE7CyB,EAF6C,KAEnCC,EAFmC,KAG5CC,EAAYnC,EAAZmC,QAERC,qBAAU,kBAAMF,EAAYD,EAASI,OAAOrC,EAAMsC,UAAS,CAACtC,EAAMsC,QAElE,IAAMC,EAAgB,SAACb,EAAkGS,GACrHT,EAAMc,iBACN,IAAMC,EAAQ3B,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,MACpC2B,MAAM,GAAD,OAAIC,wBAAJ,aAA8C,CAC/CC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACjB,cAAgB,UAAhB,OAA2BL,GAC3B,eAAgB,qBAEpBM,KAAMC,KAAKC,UAAU,CAAEjC,SAAQmB,UAAS,KAAQH,MACjDkB,KAPH,uCAOQ,WAAMC,GAAN,SAAAC,EAAA,6DACW,MAAfD,EAAIE,QAAkBC,MAAM,GAAD,OAAIH,EAAIE,OAAR,aAAmBF,EAAII,aAD9C,KAEJrB,EAFI,KAEQD,EAFR,SAE8BkB,EAAIK,OAFlC,6BAEiBnB,OAFjB,0EAPR,wDAkBEoB,EAAgB,SAACpD,GACnBqC,MAAM,GAAD,OAAIC,wBAAJ,wBAAiDtC,GAAM,CACxDuC,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CACjB,cAAgB,UAAhB,OAA2BhC,aAAaC,QAAQ,cAErDmC,KALH,uCAKQ,WAAMQ,GAAN,eAAAN,EAAA,yDACmB,MAApBM,EAASL,OADR,6BAEAC,MAFA,eAESI,EAASL,OAFlB,eAEmCK,EAAS/C,OAF5C,2FAIMgD,EAAmB1B,EAAS2B,QAAO,SAAAC,GAAC,OAAIA,EAAExD,KAAOA,KACvD6B,EAAYyB,GALZ,4CALR,wDAgBEG,EAAc,SAACC,EAAmBpD,GACpC,IAAMK,EAASF,aAAaC,QAAQ,MACpC2B,MAAM,GAAD,OAAIC,wBAAJ,wBAAiDoB,GAAa,CAC/DnB,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjB,cAAgB,UAAhB,OAA2BhC,aAAaC,QAAQ,UAChD,eAAgB,qBAEpBgC,KAAMC,KAAKC,UAAU,CAACtC,OAAMK,aAC7BkC,KAPH,uCAOQ,WAAMQ,GAAN,SAAAN,EAAA,8DACgB,MAApBM,EAASL,QADL,iCACuBC,MADvB,eACgCI,EAASL,OADzC,eAC0DK,EAAS/C,OADnE,0EAEJ+B,MAAM,GAAD,OAAIC,wBAAJ,wBAAiDoB,IACjDb,KADL,uCACU,WAAMC,GAAN,iBAAAC,EAAA,sEACmBD,EAAIK,OADvB,OACIQ,EADJ,OAEEC,EAAqC,GACzChC,EAASiC,KAAI,SAAAL,GACNA,EAAExD,KAAO0D,EACRE,EAAeE,KAAf,2BAAwBN,GAAxB,IAA2BlD,KAAMqD,EAAOrD,QAExCsD,EAAeE,KAAKN,MAG5B3B,EAAY+B,GAVV,2CADV,uDAFI,4CAPR,wDA+BJ,OACI,8BACI,gCAEQhC,EAASiC,KACL,SAACE,GAAD,OACI,wBAAC,EAAD,2BAAaA,GAAb,IACIC,IAAG,WAAMD,EAAQ/D,IACjByB,OAAQ2B,EACR5B,KAAMiC,EACNQ,YAAatE,EAAMsE,kBAI/BtE,EAAMsE,aACN,uBAAMC,SAAU,SAAA7C,GAAK,OAAIa,EAAcb,EAAOS,IAA9C,UACI,cAACd,EAAA,EAAD,CAAWmD,MAAM,oBACb/C,SAvEF,SAACC,GACnBd,EAAQc,EAAMC,OAAOC,QAuED6C,UAAW,SAAAC,GAAE,OAvBqBX,EAuBJ5B,OAtBpC,WADAwC,EAuBgCD,GAtBxCL,KACF9B,EAAcoC,EAAGZ,IAFR,IAACY,EAAwCZ,KAwBtC,cAAC9D,EAAA,EAAD,CAAQqB,KAAK,SACTpB,QAAS,SAAAyE,GAAC,OACNpC,EAAcoC,EAAGxC,IAFzB,6BCnGXyC,EAAa,SAAC5E,GAA4B,IAC3CK,EAAmBL,EAAnBK,GAAIwE,EAAe7E,EAAf6E,MAAOC,EAAQ9E,EAAR8E,IAD+B,EAGzBtE,mBAASsE,GAHgB,mBAG3CC,EAH2C,KAGnCC,EAHmC,OAIrBxE,mBAASqE,GAJY,mBAI3CI,EAJ2C,KAIjCC,EAJiC,KAkClD,OACI,qBAAKC,UAAU,QAAf,SACI,iCACI,cAAC9D,EAAA,EAAD,CAAWmD,MAAM,QAAQY,QAAQ,WAAW3D,SA/BpC,SAACC,GACjBwD,EAASxD,EAAMC,OAAOC,UA+Bd,cAACP,EAAA,EAAD,CAAWmD,MAAM,MAAMY,QAAQ,WAAW3D,SA5BpC,SAACkD,GACfK,EAAOL,EAAEhD,OAAOC,UA4BR,cAAC3B,EAAA,EAAD,CAAQC,QAzBF,WACd,IAAMuC,EAAQ3B,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,MACpC2B,MAAM,GAAD,OAAIC,wBAAJ,sBAA+CtC,GAAM,CACtDuC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BM,KAAMC,KAAKC,UAAU,CAAE4B,MAAOI,EAAUH,IAAKC,EAAQ/D,aACtDkC,KAPH,uCAOQ,WAAMC,GAAN,SAAAC,EAAA,sDACJpD,EAAMqF,KAAK,CAAElC,MAAK8B,WAAUF,SAAQO,SAAS,IADzC,2CAPR,wDAsBQ,oBACA,cAACrF,EAAA,EAAD,CAAQC,QAVL,WACXF,EAAMqF,KAAK,CAAEC,SAAS,KASd,0BCtCHC,EAAQ,SAACC,GAAyB,IAAD,EACPhF,mBAAS,IADF,mBACnCiF,EADmC,KACtBC,EADsB,OAEhBlF,mBAAiB,IAFD,mBAEnCmF,EAFmC,KAE5BC,EAF4B,OAGVpF,mBAAoB,IAHV,mBAGnCyB,EAHmC,KAGzBC,EAHyB,OAKV1B,oBAAS,GALC,mBAKnCqF,EALmC,KAKrBC,EALqB,OAMdtF,mBAAsB,MANR,mBAMnCuF,EANmC,KAM3BC,EAN2B,OAObxF,mBAASgF,EAAQlB,aAPJ,mBAOnC2B,EAPmC,KAOzBC,EAPyB,OAQhB1F,oBAAS,GARO,mBAQnC2F,EARmC,KAQ5BC,EAR4B,OASZ5F,oBAAS,GATG,mBASnCC,EATmC,KAS1BC,EAT0B,OAWpBF,mBAASgF,EAAQV,KAXG,mBAWnCA,EAXmC,KAW9BE,EAX8B,OAYhBxE,mBAASgF,EAAQX,OAZD,mBAYnCA,EAZmC,KAY5BK,EAZ4B,KAcpCrE,EAA0C,SAAlCC,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,MAUpCqB,qBAAU,WACN8D,EAASV,EAAQlB,eAClB,CAACkB,EAAQlB,cAGZ,IAAM+B,EAAa,WACf3D,MAAM,GAAD,OACEC,wBADF,0BACiD6C,EAAQnF,KAC5D6C,KAFF,uCAEO,WAAOoD,GAAP,eAAAlD,EAAA,sEACoBkD,EAAO9C,OAD3B,QACG+C,EADH,QAEUC,OAAS,IAClBZ,EAASW,GAC0B,OAA/BzF,aAAaC,QAAQ,OACrBwF,EAASrC,KAAI,SAACuC,GACNjF,OAAOiF,EAAEzF,UAAYQ,OAAOV,aAAaC,QAAQ,SACjD+E,GAAQ,GACRE,EAAUS,QARvB,2CAFP,wDA+BJrE,qBAZsB,WAClBM,MAAM,GAAD,OAAIC,wBAAJ,6BAAsD6C,EAAQnF,KAAM6C,KAAzE,uCACI,WAAOC,GAAP,eAAAC,EAAA,sEAC8BD,EAAIK,OADlC,QACUkD,EADV,QAEoBF,OAAS,GACrBtE,EAAYwE,GAHpB,2CADJ,yDAWqB,IACzBtE,oBAAUiE,EAAY,IAEtB,IAIMM,EAAS,uCAAG,WAAOC,GAAP,eAAAxD,EAAA,yDACd1C,GAAW,IACPkG,EAAItB,QAFM,gCAGSsB,EAAIzD,IAAIK,OAHjB,OAGJqD,EAHI,OAIVnB,EAAYlE,OAAOqF,IAEY,MAA3BC,OAAOF,EAAIzD,IAAIE,UACfuD,EAAI3B,WAAaJ,GAASK,EAAS0B,EAAI3B,UACvC2B,EAAI7B,SAAWD,GAAOE,EAAO4B,EAAI7B,SAR3B,2CAAH,sDAkDf,OACI,gCACI,qBAAsBgC,IAAKjC,EAAKkC,IAAKnC,GAA3BW,EAAQnF,IAChBQ,GAASW,OAAOgE,EAAQxE,UAAYA,EAAU,sBAAKX,GAAG,aAAR,UAC5C,cAAC,EAAD,CAAeA,GAAImF,EAAQnF,GAAIH,QAASsF,EAAQ1D,OAAQxB,KAAK,WAC7D,cAAC,EAAD,CAAYH,KAAMqF,EAAStF,QA3DnB,WAChBQ,GAAW,MA2DFD,GAAW,cAAC,EAAD,CAAYJ,GAAImF,EAAQnF,GAAIwE,MAAOA,EAAOC,IAAKA,EACvDO,KAAMsB,IACTd,EACK,cAAC,EAAD,CAAexF,GAAE,OAAE0F,QAAF,IAAEA,OAAF,EAAEA,EAAQ1F,GAAIH,QA3B9B,SAACG,GAChBqC,MAAM,GAAD,OAAIC,wBAAJ,qBAA8CtC,GAAM,CACrDuC,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CACjBmE,cAAc,UAAD,OAAYnG,aAAaC,QAAQ,cAEnDmC,KALH,uCAKQ,WAAOC,GAAP,eAAAC,EAAA,yDAEe,MAAfD,EAAIE,OAFJ,4BAGAC,MAHA,SAGYH,EAAIK,OAHhB,yCAKE0D,EAAmBvB,EAAM/B,QAAO,SAAAuD,GAAC,OAAIA,EAAE9G,KAAOA,KACpDuF,EAASsB,IACS,EAClBpB,EADkB,OAPd,4CALR,wDA0BkExF,KAAK,WACzD,cAAC,EAAD,CAAeD,GAAImF,EAAQnF,GAAIH,QA/C/B,SAACiC,GACf,IAAMnB,EAASQ,OAAOV,aAAaC,QAAQ,OAC3C2B,MAAM,GAAD,OAAIC,wBAAJ,UAA2C,CAC5CC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACjBmE,cAAc,UAAD,OAAYnG,aAAaC,QAAQ,UAC9C,eAAgB,qBAEpBgC,KAAMC,KAAKC,UAAU,CAAEjC,SAAQmB,cAChCe,KAPH,uCAOQ,WAAOC,GAAP,SAAAC,EAAA,yDAEe,MAAfD,EAAIE,OAFJ,4BAGAC,MAHA,SAGYH,EAAIK,OAHhB,yCAKJsC,GAAQ,GACRO,IANI,2CAPR,wDA6CiE/F,KAAK,SAC9D,8BAAMmF,OACD,KACRE,EAAMa,OAAS,GACZ,qBAAKY,aApHD,WACZhB,GAAS,IAmH2BiB,aAhHxB,WACZjB,GAAS,IA+GD,SACMD,EACI,8BACE,+BACKR,EAAMzB,KAAI,SAAAiD,GAAC,eACR,oBAEIG,MAAO,CAAEC,UAAW,QAFxB,6BAGKJ,EAAEjG,YAHP,aAGK,EAAQC,UAHb,sBAG0BgG,EAAEjG,YAH5B,aAG0B,EAAQE,WAHlC,oBACsB+F,EAAEnG,YAHhC,wBAUF,gCACG2E,EAAMa,OADT,IACkBb,EAAMa,OAAS,EAAI,QAAU,YAI7D,cAAC,EAAD,CAAalE,MAAOL,EAAUE,QAASqD,EAAQnF,GAAIiE,YAAa2B,QCjD7DuB,EA5GF,SAACxH,GACV,IAAMsE,EAAcmD,QAAQzH,EAAM4B,OADF,EAEMpB,mBAAS,CAC3C,CAAEH,GAAI,EAAGwE,MAAO,GAAIC,IAAK,MAHG,mBAEzB4C,EAFyB,KAETC,EAFS,OAKVnH,mBAAS,IALC,mBAKzBsE,EALyB,KAKpBE,EALoB,OAMNxE,mBAAS,IANH,mBAMzBqE,EANyB,KAMlBK,EANkB,OAOI1E,mBAAS,IAPb,mBAOzBoH,EAPyB,KAOXlC,EAPW,OAQKlF,oBAAS,GARd,mBAQzBqH,EARyB,KAQZC,EARY,KAU1BC,EAAW,WACb,IAAMC,EAAM,UAAMrF,wBAAN,eACRsF,EAA2B,GAC/BvF,MAAMsF,GACD9E,MAAK,SAACQ,GAAD,OAAcA,EAASF,UAC5BN,MAAK,SAACgF,GACHA,EAAKC,SAAQ,SAACC,GACVH,EAAU9D,KAAKiE,MAEnBT,EAAYM,MAEfI,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,OAGlCE,EAAoB,WACtBV,GAAeD,IA6BbY,EAAc,SAACpI,GACjB,IAAMoC,EAAK,iBAAa3B,aAAaC,QAAQ,UAE7C,GAAI2H,OAAOC,QAAQ,+CAAgD,CAE/D,IAAM7D,EAAG,UAAMnC,wBAAN,sBAAiDtC,GAC1DqC,MAAMoC,EAAK,CACPlC,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CAAEmE,cAAexE,MACvCS,KAHH,uCAGQ,WAAOQ,GAAP,iBAAAN,EAAA,sEACmBM,EAASF,OAD5B,OACEoF,EADF,OAEJtF,MAAMsF,GACiB,MAApBlF,EAASL,SACFwF,EAAiBnB,EAAe9D,QAAO,SAAAkF,GAAG,OAAIA,EAAIzI,KAAOA,KAC/DsH,EAAYkB,IALZ,2CAHR,yDAgBR,OAFAzG,oBAAU2F,EAAU,IAGhB,gCACI,gCACKzD,GAAe,cAACrE,EAAA,EAAD,CAAQC,QAASsI,EAAjB,4BACfX,GACG,sBAAKxH,GAAG,YAAR,UACI,cAACgB,EAAA,EAAD,CACIhB,GAAG,QACHmE,MAAM,QACN/C,SAvCJ,SAACC,GACjBwD,EAASxD,EAAMC,OAAOC,UAuCN,cAACP,EAAA,EAAD,CACIhB,GAAG,MACHmE,MAAM,MACN/C,SAvCN,SAACkD,GACfK,EAAOL,EAAEhD,OAAOC,UAuCA,cAAC3B,EAAA,EAAD,CAAQC,QA9DV,WACd,IAAMuC,EAAQ3B,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,MACpC2B,MAAM,GAAD,OAAIC,wBAAJ,WAA4C,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BM,KAAMC,KAAKC,UAAU,CAAC4B,QAAOC,MAAK9D,aACnCkC,KAPH,uCAOQ,WAAMC,GAAN,SAAAC,EAAA,kEACJsC,EADI,SACcvC,EAAIK,OADlB,kCAEJsE,GAAc,GACdC,IAHI,2CAPR,wDA2DgB,kBACA,cAAC9H,EAAA,EAAD,CAAQC,QAASsI,EAAjB,uBAGR,8BAAMZ,OAEV,qBAAKvH,GAAG,aAAR,SACKqH,EAAexD,KACZ,SAAC6E,GAAD,MACoB,KAAhBA,EAAMlE,OACF,wBAAC,EAAD,2BAAWkE,GAAX,IAAkB1E,IAAK0E,EAAM1I,GAAIiE,YAAaA,EAAaxC,OAAQ2G,c,6ECShFO,EAnGD,SAAChJ,GAAuB,IAAD,EACDQ,mBAAS,IADR,mBAC1ByI,EAD0B,KAChBC,EADgB,OAED1I,mBAAS,IAFR,mBAE1B2I,EAF0B,KAEhBC,EAFgB,OAGA5I,mBAAS,IAHT,mBAG1B8D,EAH0B,KAGb+E,EAHa,OAIJ7I,oBAAS,GAJL,mBAI1B8I,EAJ0B,KAIlBC,EAJkB,KAW3BC,EAAUC,cA8ChB,OACI,gCACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASrC,MAAO,CAAEsC,WAAY,WAA/C,SACI,cAACC,EAAA,EAAD,CAASvC,MAAO,CAAEwC,KAAM,GAAxB,SACI,cAACC,EAAA,EAAD,CAAY3E,QAAQ,KAApB,uBAGR,uBAAM4E,YAAU,EAACzF,SAnDV,SAAC7C,GACZA,EAAMc,iBAEN,IAAMwF,EAAM,UAAMrF,wBAAN,UAEZD,MAAMsF,EAAQ,CACVpF,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBE,KAAMC,KAAKC,UAAU,CAAEgG,WAAUE,eAElCjG,KAPH,uCAOQ,WAAOQ,GAAP,eAAAN,EAAA,yDACoB,MAApBM,EAASL,OADT,4BAEAgG,EAFA,SAEgB3F,EAASF,OAFzB,gEAKA6F,EAAU,2BALV,UAOmB3F,EAASF,OAP5B,QAOMyG,EAPN,OASAnJ,aAAaoJ,QAAQ,KAAMD,EAAKjJ,QAChCF,aAAaoJ,QAAQ,QAASD,EAAKpJ,OACnCC,aAAaoJ,QAAQ,QAASD,EAAKxH,YAEhBxB,IAAnBjB,EAAMyB,UAA0BzB,EAAMyB,UAAS,GAE/C+H,EAAQrF,KAAK,KAfb,4CAPR,wDA8CI,UACI,sBAAK9D,GAAG,OAAR,UACI,sBAAKA,GAAG,YAAR,UACA,cAACgB,EAAA,EAAD,CACIhB,GAAG,WACHmE,MAAM,WACNY,QAAQ,WACR3D,SA1BG,SACnBC,GAEAwH,EAAYxH,EAAMC,OAAOC,UAyBT,cAACP,EAAA,EAAD,CACIhB,GAAG,WACHmE,MAAM,WACNY,QAAQ,WACR9D,KAAMgI,EAAS,WAAa,OAC5B7H,SA3BD,SACnBC,GAEA0H,EAAY1H,EAAMC,OAAOC,aA2BT,sBAAKvB,GAAG,UAAR,UACI,qBAAKA,GAAG,UACR,8BACI,cAAC8J,EAAA,EAAD,CAAYjK,QA9EtB,WAEdqJ,GAAYD,IA4EY,SACKA,EAAS,cAAC,IAAD,IAAwB,cAAC,IAAD,cAKtD,cAACrJ,EAAA,EAAD,CAAQqB,KAAK,SAAb,uBAEJ,8BAAMgD,IACN,cAAC,IAAD,CAAM8F,GAAG,UAAT,SACI,cAACnK,EAAA,EAAD,4B,6CC5FHoK,EAAY,SAACrK,GAA2B,IACzCK,EAAuDL,EAAvDK,GAAI4I,EAAmDjJ,EAAnDiJ,SAAUE,EAAyCnJ,EAAzCmJ,SAAUhI,EAA+BnB,EAA/BmB,UAAWC,EAAoBpB,EAApBoB,SAAUP,EAAUb,EAAVa,MADL,EAEbL,mBAASyI,GAFI,mBAEzCqB,EAFyC,KAE5BpB,EAF4B,OAGb1I,mBAAS2I,GAHI,mBAGzCoB,EAHyC,KAG5BnB,EAH4B,OAIF5I,mBAAS,IAJP,mBAIxBgK,GAJwB,aAKXhK,mBAASW,GALE,mBAKzCsJ,EALyC,KAK3BC,EAL2B,OAMblK,mBAASY,GANI,mBAMzCuJ,EANyC,KAM5BC,EAN4B,OAQnBpK,oBAAS,GARU,mBAQzC8I,EARyC,KAQjCC,EARiC,OASb/I,mBAAS,IATI,mBASzCiF,EATyC,KAS5BC,EAT4B,KAgB5CmF,EAAM,GACFA,EAARhK,EAAc,QAAgB,WAjBkB,MAkBnBL,mBAASqK,GAlBU,mBAkBzCC,EAlByC,KAkB/BC,EAlB+B,QAmBlBvK,mBAAS,IAnBS,qBAmBzCwK,GAnByC,MAmBhCC,GAnBgC,SAoBbzK,oBAAS,GApBI,qBAoBzC0K,GApByC,MAoB1BC,GApB0B,MA2GhD,OACI,sBAAKhG,UAAU,QAAQ9E,GAAG,aAA1B,UACI,qBAAKA,GAAG,cAAR,SACI,iCACI,cAACgB,EAAA,EAAD,CAAWmD,MAAM,eAAeY,QAAQ,WAAW3D,SAxF5C,SAACC,GACpBwH,EAAYxH,EAAMC,OAAOC,UAwFb,cAACP,EAAA,EAAD,CAAWmD,MAAM,oBAAoBY,QAAQ,WAAW3D,SAjF7C,SAACC,GACxBuJ,GAAWvJ,EAAMC,OAAOC,QAiFRN,KAAMgI,EAAS,WAAa,SAEhC,cAACjI,EAAA,EAAD,CAAWmD,MAAM,eAAeY,QAAQ,WAAW3D,SAxF5C,SAACC,GACpB0H,EAAY1H,EAAMC,OAAOC,QAwFTN,KAAMgI,EAAS,WAAa,SAChC,cAACjI,EAAA,EAAD,CAAWmD,MAAM,wBAAwBY,QAAQ,WAAW3D,SAlF9C,SAACC,GAC3B8I,EAAmB9I,EAAMC,OAAOC,OAChCuJ,GAAUzJ,EAAMC,OAAOC,QAAU2I,IAiFjBjJ,KAAMgI,EAAS,WAAa,SAC/B4B,IAAiB,wDAElB,cAAC7J,EAAA,EAAD,CAAWmD,MAAM,iBAAiBY,QAAQ,WAAW3D,SAjF7C,SAACC,GACrBgJ,EAAahJ,EAAMC,OAAOC,UAiFd,cAACP,EAAA,EAAD,CAAWmD,MAAM,gBAAgBY,QAAQ,WAAW3D,SA9E7C,SAACC,GACpBkJ,EAAYlJ,EAAMC,OAAOC,UA8Eb,eAACwJ,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,SAArB,0BACA,eAACE,EAAA,EAAD,CAAYC,aAAW,eAAelL,KAAK,SAASsB,MAAOkJ,EAAUrJ,SA7E/D,SAACC,GACvBqJ,EAASrJ,EAAMC,OAAOC,QA4EN,UACI,cAAC6J,EAAA,EAAD,CAAkB7J,MAAM,QAAQ8J,QAAS,cAACC,EAAA,EAAD,IAAWnH,MAAM,UAC1D,cAACiH,EAAA,EAAD,CAAkB7J,MAAM,WAAW8J,QAAS,cAACC,EAAA,EAAD,IAAWnH,MAAM,wBAGrE,cAACvE,EAAA,EAAD,CAAQC,QA7EP,WACb,IAAMuC,EAAQ3B,aAAaC,QAAQ,SAEnC2B,MAAM,GAAD,OAAIC,wBAAJ,UAA2C,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBE,KAAMC,KAAKC,UAAU,CAAEgG,WAAU,SAAY+B,OAE/C9H,KAPF,uCAOO,WAAMQ,GAAN,iBAAAN,EAAA,yDACqB,MAApBM,EAASL,OADV,gCAEoBK,EAASF,OAF7B,OAEO0E,EAFP,OAGCxC,EAAYwC,GAHb,uBAKK0D,EAAU,GAEVA,EADArB,IAAgBpB,EACN,CACN,SAAYmB,EACZ,UAAaG,EACb,SAAYE,EACZ,MAAsB,UAAbG,GAGH,CACN,SAAYR,EACZ,SAAYC,EACZ,UAAaE,EACb,SAAYE,EACZ,MAAsB,UAAbG,GAGjBpI,MAAM,GAAD,OAAIC,wBAAJ,qBAA8CtC,GAAM,CACrDuC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BM,KAAMC,KAAKC,UAAU2I,KACtB1I,KAPH,uCAOQ,WAAMC,GAAN,eAAAC,EAAA,6DACE8E,EAAO/E,EADT,KAEJG,MAFI,SAES4E,EAAKvH,OAFd,mBAEsBkL,QAAQ,KAAM,KAFpC,cAGJ7L,EAAMqF,KAAK,CAAE,IAAO6C,EAAMuC,eAAcE,cAAa,eAAkBG,EAAUR,cAAahF,SAAS,IAHnG,2CAPR,uDAtBD,4CAPP,wDA0EuCwG,SAAUZ,GAArC,oBACA,cAACjL,EAAA,EAAD,CAAQC,QA5BT,WACXF,EAAMqF,KAAK,CAAEC,SAAS,KA2BV,oBACCG,OAGT,sBAAKpF,GAAG,cAAR,UACI,cAAC8J,EAAA,EAAD,CAAYjK,QA7HN,WAEdqJ,GAAYD,IA2HJ,SACKA,EAAS,cAAC,IAAD,IAAwB,cAAC,IAAD,MAEtC,+BCnGDyC,EA7CF,SAAC/L,GAAsB,IACxBkB,EAAiClB,EAAjCkB,KAAM8K,EAA2BhM,EAA3BgM,WAAYC,EAAejM,EAAfiM,WAEpBC,EAASF,IAAexK,OAAON,EAAKb,IACpCQ,EAA0C,SAAlCC,aAAaC,QAAQ,SAJJ,EAKDP,oBAAS,GALR,mBAKxBC,EALwB,KAKfC,EALe,OAOGF,mBAASU,EAAKC,WAPjB,mBAOxBA,EAPwB,KAObuJ,EAPa,OAQClK,mBAASU,EAAK+H,UARf,mBAQxBA,EARwB,KAQdC,EARc,OASC1I,mBAASU,EAAKE,UATf,mBASxBA,EATwB,KASdwJ,EATc,OAUOpK,mBAASU,EAAKL,OAVrB,mBAUxBsL,EAVwB,KAUXC,EAVW,KAgBzBC,EAAe,uCAAG,WAAOzF,GAAP,SAAAxD,EAAA,sDACpB1C,GAAW,GACPkG,EAAItB,SAC2B,MAA3BwB,OAAOF,EAAIzD,IAAIE,UACfuD,EAAI6D,eAAiBtJ,GAAauJ,EAAa9D,EAAI6D,cACnD7D,EAAI+D,cAAgBvJ,GAAYwJ,EAAYhE,EAAI+D,aAChD/D,EAAI0D,cAAgBrB,GAAYC,EAAYtC,EAAI0D,aAChD1D,EAAI0F,iBAAmBH,GAAeC,EAAexF,EAAI0F,iBAP7C,2CAAH,sDAarB,OACI,sBAAKnH,UAAW+G,EAAS,cAAgB,WAAzC,UACI,uCAAQ/K,EAAR,YAAqBC,KACrB,6BAAK6H,IACJkD,EAAc,uCAAiB,+CAC9BtL,GAASmL,IAAexK,OAAON,EAAKb,IAAO,gCACzC,cAAC,EAAD,CAAeA,GAAIa,EAAKb,GAAIH,QAAS+L,EAAY3L,KAAK,WACtD,cAAC,EAAD,CAAYH,KAAMe,EAAMhB,QAxBf,WACjBQ,GAAW,SAwBE,KACRD,GAAW,8BAAK,cAAC,EAAD,CAAWJ,GAAIa,EAAKb,GAAI4I,SAAUA,EAC/C9H,UAAWA,EAAWC,SAAUA,EAChC+H,SAAUjI,EAAKiI,SAAUtI,MAAOsL,EAAa9G,KAAMgH,UCMpDE,EAlDE,SAACvM,GAA0B,IAAD,EACbQ,mBAA0B,IADb,mBAChCgM,EADgC,KACzBC,EADyB,OAEJjM,mBAAS,IAFL,mBAEhCiF,EAFgC,KAEnBC,EAFmB,KAcjCgH,EAAa,SAACrM,GAChB,GAAIqI,OAAOC,QAAQ,8CAA+C,CAC9D,IAAMlG,EAAK,iBAAa3B,aAAaC,QAAQ,UAC7C2B,MAAM,kCAAD,OAAmCrC,GACpC,CACIuC,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CAAEmE,cAAexE,MACvCS,KAJP,uCAIY,WAAMC,GAAN,eAAAC,EAAA,kEACJsC,EADI,SACcvC,EAAIK,OADlB,kCAEe,MAAfL,EAAIE,SACEsJ,EAAgBH,EAAM5I,QAAO,SAAAgJ,GAAC,OAAIA,EAAEvM,KAAOA,KACjDoM,EAASE,IAJT,2CAJZ,yDAiBR,OAFAvK,qBA5BiB,WACb,IAAM4F,EAAM,UAAMrF,wBAAN,cACZD,MAAMsF,GACD9E,MAAK,SAACQ,GAAD,OAAcA,EAASF,UAC5BN,MAAK,SAACgF,GACHuE,EAASvE,MAEZG,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QAqBpB,IAGhB,gCACI,6BACKkE,EAAMtI,KAAI,SAAAhD,GAAI,OACX,6BACI,cAAC,EAAD,CAAMA,KAAMA,EAAM8K,WAAYxK,OAAOxB,EAAM4B,OACvCqK,WAAYS,KAFXxL,EAAKb,SAOrBoF,MCjDAoH,EAAY,SAAC7M,GACtB,OACI,qBAAKmF,UAAU,QAAf,SACI,cAACuE,EAAA,EAAD,CAAQC,SAAS,SAASrC,MAAO,CAAEsC,WAAY,WAA/C,SACI,eAACC,EAAA,EAAD,CAASvC,MAAO,CAAEwC,KAAM,GAAxB,UACI,cAACC,EAAA,EAAD,CAAY3E,QAAQ,KAApB,qBACA,cAAC,IAAD,CACI0H,OAAK,EACL1C,GAAG,IACH2C,YAAa,CAAEC,WAAY,QAC3B7H,UAAU,UAJd,oBAQA,cAAC,IAAD,CACI2H,OAAK,EACL1C,GAAG,SACH2C,YAAa,CAAEC,WAAY,QAC3B7H,UAAU,UAJd,mBAQEnF,EAAM4B,MAKJ,cAAC3B,EAAA,EAAD,CAAQI,GAAG,YAAYH,QAASF,EAAMyB,SAAtC,oBAJA,cAAC,IAAD,CAAS2I,GAAG,SAAZ,SACI,cAACnK,EAAA,EAAD,CAAQI,GAAG,YAAX,6BCqHb4M,EAvIA,WAAO,IAAD,EACezM,mBAAS,IADxB,mBACVyI,EADU,KACAC,EADA,OAEe1I,mBAAS,IAFxB,mBAEV2I,EAFU,KAEAC,EAFA,OAGmB5I,mBAAS,IAH5B,mBAGV0M,EAHU,KAGMC,EAHN,OAIiB3M,mBAAS,IAJ1B,mBAIVW,EAJU,KAICuJ,EAJD,OAKelK,mBAAS,IALxB,mBAKVY,EALU,KAKAwJ,EALA,OAMgBpK,mBAAS,IANzB,mBAMV8D,EANU,KAMG+E,EANH,OAOY7I,oBAAS,GAPrB,mBAOV8I,EAPU,KAOFC,EAPE,KA8EjB,OAAQ,8BACJ,uBAAMS,YAAU,EAACzF,SAjEN,SAAC7C,GACZA,EAAMc,iBAGF6G,EADAF,IAAa+D,EACH,gCAEA,IAGd,IAAMlF,EAAM,UAAMrF,wBAAN,UACZD,MAAMsF,EAAQ,CACVpF,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBE,KAAMC,KAAKC,UAAU,CAAEgG,WAAUE,WAAUhI,YAAWC,eAEvD8B,KAPH,uCAOQ,WAAOQ,GAAP,eAAAN,EAAA,yDACoB,MAApBM,EAASL,OADT,4BAEAgG,EAFA,SAEgB3F,EAASF,OAFzB,gEAKA6F,EAAU,8BALV,UAOmB3F,EAASF,OAP5B,QAOMyG,EAPN,OAQA1B,QAAQ6E,IAAInD,GAEZnJ,aAAaoJ,QAAQ,QAASD,EAAKxH,OACnC3B,aAAaoJ,QAAQ,KAAMD,EAAKjJ,QAChCF,aAAaoJ,QAAQ,QAASD,EAAKpJ,OAZnC,4CAPR,wDAuDA,UACI,sBAAKR,GAAG,OAAR,UACI,sBAAKA,GAAG,YAAR,UACI,cAACgB,EAAA,EAAD,CACIhB,GAAG,WACHmE,MAAM,WACNY,QAAQ,WACR3D,SAtCG,SACnBC,GAEAwH,EAAYxH,EAAMC,OAAOC,UAqCb,cAACP,EAAA,EAAD,CACIhB,GAAG,WACHmE,MAAM,WACNY,QAAQ,WACR9D,KAAMgI,EAAS,WAAa,OAC5B7H,SAvCG,SACnBC,GAEA0H,EAAY1H,EAAMC,OAAOC,UAsCb,cAACP,EAAA,EAAD,CACIhB,GAAG,mBACHmE,MAAM,oBACNY,QAAQ,WACR9D,KAAMgI,EAAS,WAAa,OAC5B7H,SAxCC,SACjBC,GAEAyL,EAAUzL,EAAMC,OAAOC,UAuCX,cAACP,EAAA,EAAD,CACIhB,GAAG,aACHmE,MAAM,aACNY,QAAQ,WACR3D,SAxCI,SACpBC,GAEAgJ,EAAahJ,EAAMC,OAAOC,UAuCd,cAACP,EAAA,EAAD,CACIhB,GAAG,YACHmE,MAAM,YACNY,QAAQ,WACR3D,SAxCG,SACnBC,GAEAkJ,EAAYlJ,EAAMC,OAAOC,aAwCjB,qBAAKvB,GAAG,kBAAR,SACI,8BACI,cAAC8J,EAAA,EAAD,CAAYjK,QA5Gd,WAEVqJ,GAAYD,IA0GA,SACKA,EAAS,cAAC,IAAD,IAAwB,cAAC,IAAD,aAKlD,8BAAMhF,IACN,cAACrE,EAAA,EAAD,CAAQqB,KAAK,SAAb,oBACA,cAAC,IAAD,CAAM8I,GAAG,SAAT,SACI,cAACnK,EAAA,EAAD,sCCjGDoN,EA/BH,WACR,IAAMnM,EAAOJ,aAAaC,QAAQ,MAClCwH,QAAQ6E,IAAIlM,GAFE,MAGmBV,wBAAkBS,IAATC,GAA+B,OAATA,GAHlD,mBAGPoD,EAHO,KAGM+E,EAHN,KAcRiE,EAAS,SAAChH,GACZ+C,EAAU/C,IAGd,OACI,sBAAKnB,UAAU,MAAf,UACI,cAAC,EAAD,CAAWvD,MAAO0C,EAAa7C,SAfxB,WACXX,aAAayM,WAAW,MACxBzM,aAAayM,WAAW,SACxBzM,aAAayM,WAAW,SAExBlE,GADkB,GAElBd,QAAQ6E,IAAI,kBAUR,cAAC,IAAD,CAAON,OAAK,EAACU,KAAK,IAAIC,OAAQ,kBAAO,cAAC,EAAD,CAAM7L,MAAO0C,OAClD,cAAC,IAAD,CAAOkJ,KAAK,SACRC,OAAQ,kBAAO,cAAC,EAAD,CAAOhM,SAAU6L,OAEpC,cAAC,IAAD,CAAOE,KAAK,SAASC,OAAQ,kBAAO,cAAC,EAAD,CAAU7L,MAAOV,OACrD,cAAC,IAAD,CAAOsM,KAAK,UAAUnC,UAAW4B,QCvB9BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1K,MAAK,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAST,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MACcU,SAASC,eAAe,SAM9CV,M","file":"static/js/main.ee048b61.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\nimport { ButtonProps } from '../interfaces/ButtonProps';\n\nexport const EditButton = (props: ButtonProps) => {\n    const handleClick = () => {\n        props.onClick(props.item);\n    }\n    return(\n        <Button onClick={handleClick}>Edit</Button>\n    )\n}","import { Button } from '@material-ui/core';\nimport { ButtonProps } from '../interfaces/ButtonProps';\n\nexport const DefaultButton = (props: ButtonProps) => {\n    const handleClick = () => {\n        props.onClick(props.id);\n    }\n    return(\n        <Button onClick={handleClick}>{props.name}</Button>\n    )\n}","import { Comment as CommentInterface } from \"../interfaces/Comment\";\nimport { DefaultButton } from \"./DefaultButton\";\nimport { ChangeEvent, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nexport const Comment = (props: CommentInterface) => {\n    const [editing, setEditing] = useState(false);\n    const [text, setText] = useState(props.text);\n\n    const admin = localStorage.getItem('admin') === 'true';\n    const userId = localStorage.getItem('id');\n\n    const edit = () => {\n        setEditing(true);\n    }\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setText(event.target.value);\n    }\n\n    const submit = () => {\n        props.edit(props.id, text);\n        setEditing(false);\n    }\n\n    const cancel = () => {\n        setEditing(false);\n    }\n\n    return (\n        <div>\n            {editing\n                ? <div>\n                    {`${props.user !== undefined && props.user.firstName} ${props.user !== undefined && props.user.lastName}:`}\n                    <TextField\n                        type='text'\n                        placeholder={String(props.text)}\n                        onChange={handleChange}\n                    ></TextField>\n                    <Button onClick={submit}>Submit Changes</Button>\n                    <Button onClick={cancel}>Cancel</Button>\n                </div>\n                : <div>\n                    {`${props.user !== undefined && props.user.firstName} ${props.user !== undefined && props.user.lastName}: \n                            ${props.text}`}\n                </div>\n            }\n\n            {(admin || String(props.userId) === userId) &&\n                <div>\n                    <DefaultButton onClick={() => props.delete(props.id)} name='Delete' />\n                    <DefaultButton onClick={edit} name='Edit' />\n                </div>}\n        </div>\n    )\n}","import { Comment as CommentInterface } from '../interfaces/Comment';\nimport { Comment } from './Comment';\nimport { Button, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nexport interface CommentListProps {\n    array: CommentInterface[];\n    imageId: number;\n    loginStatus: boolean;\n}\n\nexport const CommentList = (props: CommentListProps) => {\n    const [commentText, setText] = useState('');\n    const [comments, setComments] = useState<CommentInterface[]>([]);\n    const { imageId } = props;\n\n    useEffect(() => setComments(comments.concat(props.array)), [props.array]);\n\n    const createComment = (event: React.FormEvent<HTMLFormElement> | React.MouseEvent | React.KeyboardEvent<HTMLDivElement>, imageId: number) => {\n        event.preventDefault();\n        const token = localStorage.getItem('token');\n        const userId = localStorage.getItem('id');\n        fetch(`${process.env.REACT_APP_API_URL}/comments`, {\n            method: 'POST',\n            headers: new Headers({\n                'Authorization': `Bearer ${token}`,\n                'Content-type': 'application/json'\n            }),\n            body: JSON.stringify({ userId, imageId, 'text': commentText })\n        }).then(async res => {\n            res.status !== 200 && alert(`${res.status}: ${res.statusText}`);\n            setComments(comments.concat(await res.json()));\n        }\n        );\n    }\n\n    const updateComment = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setText(event.target.value);\n    }\n\n    const deleteComment = (id: number) => {\n        fetch(`${process.env.REACT_APP_API_URL}/comments/id/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            })\n        }).then(async response => {\n            if(response.status !== 200){\n                alert(`${response.status}: ${await response.text()}`);\n            } else {\n                const filteredComments = comments.filter(c => c.id !== id); \n                setComments(filteredComments);\n            }\n        }\n        );\n    }\n\n    const editComment = (commentId: number, text: String) => {\n        const userId = localStorage.getItem('id');\n        fetch(`${process.env.REACT_APP_API_URL}/comments/id/${commentId}`, {\n            method: 'PUT',\n            headers: new Headers({\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({text, userId})\n        }).then(async response => {\n            response.status !== 200 && alert(`${response.status}: ${await response.text()}`);\n            fetch(`${process.env.REACT_APP_API_URL}/comments/id/${commentId}`)\n                .then(async res => {\n                    const loaded = await res.json();\n                    let editedComments: CommentInterface[] = [];\n                    comments.map(c => {\n                        if(c.id === commentId){\n                            editedComments.push({...c, text: loaded.text})\n                        } else {\n                            editedComments.push(c);\n                        }\n                    });\n                    setComments(editedComments);\n                })\n        }\n        );\n    }\n\n    const keyPress = (e: React.KeyboardEvent<HTMLDivElement>, commentId: number) => {\n        if (e.key === 'Enter') {\n            createComment(e, commentId);\n        }\n    }\n    return (\n        <div>\n            <div>\n                {\n                    comments.map(\n                        (comment: CommentInterface) =>\n                            <Comment {...comment}\n                                key={`C${comment.id}`}\n                                delete={deleteComment}\n                                edit={editComment}\n                                loginStatus={props.loginStatus} />\n                    )\n                }\n                {\n                    props.loginStatus &&\n                    <form onSubmit={event => createComment(event, imageId)}>\n                        <TextField label='Compose a Comment'\n                            onChange={updateComment}\n                            onKeyDown={ev => keyPress(ev, imageId)} />\n                        <Button type='submit'\n                            onClick={e =>\n                                createComment(e, imageId)\n                            }>\n                            Submit</Button>\n                    </form>}\n            </div>\n\n        </div>\n    )\n}","import { Button, TextField } from '@material-ui/core';\nimport { useState } from 'react';\n\ninterface ImageModalProps {\n    id: number;\n    title: string;\n    url: string;\n    func: Function;\n}\n\nexport const ImageModal = (props: ImageModalProps) => {\n    const { id, title, url } = props;\n\n    const [newUrl, setUrl] = useState(url);\n    const [newTitle, setTitle] = useState(title);\n\n    const updateTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.target.value);\n    }\n\n    const updateUrl = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUrl(e.target.value);\n    }\n\n    const editImage = () => {\n        const token = localStorage.getItem('token');\n        const userId = localStorage.getItem('id');\n        fetch(`${process.env.REACT_APP_API_URL}/images/id/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ title: newTitle, url: newUrl, userId })\n        }).then(async res => {\n            props.func({ res, newTitle, newUrl, changed: true });\n        }\n        );\n    }\n\n    const cancel = () => {\n        props.func({ changed: false });\n    }\n\n    return (\n        <div className='modal'>\n            <form>\n                <TextField label='Title' variant='outlined' onChange={updateTitle} />\n                <TextField label='Url' variant='outlined' onChange={updateUrl} />\n                <Button onClick={editImage}>Submit</Button>\n                <Button onClick={cancel}>Cancel</Button>\n            </form>\n        </div>\n    )\n}","import { useState, useEffect } from 'react';\n\nimport { EditButton } from './EditButton';\nimport { DefaultButton } from './DefaultButton';\nimport { CommentList } from './CommentList';\nimport { ImageModal} from './ImageModal';\n\nimport { Like } from '../interfaces/Like';\nimport { ImageProps } from '../interfaces/ImageProps';\nimport { Comment } from '../interfaces/Comment';\nimport { EditImageResponse } from '../interfaces/EditImageResponse';\n\nexport const Image = (myProps: ImageProps) => {\n    const [apiResponse, setResponse] = useState('');\n    const [likes, setLikes] = useState<Like[]>([]);\n    const [comments, setComments] = useState<Comment[]>([]);\n\n    const [alreadyLiked, setLike] = useState(false);\n    const [myLike, setMyLike] = useState<Like | null>(null);\n    const [loggedIn, setLogin] = useState(myProps.loginStatus);\n    const [hover, setHover] = useState(false);\n    const [editing, setEditing] = useState(false);\n\n    const [url, setUrl] = useState(myProps.url);\n    const [title, setTitle] = useState(myProps.title);\n\n    const admin = localStorage.getItem('admin') === 'true';\n    const userId = localStorage.getItem('id');\n\n    const onHover = () => {\n        setHover(true);\n    }\n\n    const onLeave = () => {\n        setHover(false);\n    }\n\n    useEffect(() => {\n        setLogin(myProps.loginStatus);\n    }, [myProps.loginStatus]);\n\n    // send fetch request to get the likes for the individual image\n    const fetchLikes = () => {\n        fetch(\n            `${process.env.REACT_APP_API_URL}/likes/imageId/${myProps.id}`\n        ).then(async (result) => {\n            const likeList = await result.json();\n            if (likeList.length > 0) {\n                setLikes(likeList);\n                if (localStorage.getItem('id') !== null) {\n                    likeList.map((x: Like) => {\n                        if (String(x.userId) === String(localStorage.getItem('id'))) {\n                            setLike(true);\n                            setMyLike(x);\n                        }\n                    }\n                    );\n                }\n            }\n        })\n    };\n\n    const fetchComments = () => {\n        fetch(`${process.env.REACT_APP_API_URL}/comments/imageId/${myProps.id}`).then(\n            async (res) => {\n                const commentList = await res.json();\n                if (commentList.length > 0) {\n                    setComments(commentList);\n                    // TODO: Filter to see which belong to currently logged in user\n                }\n            }\n        )\n    }\n\n    useEffect(fetchComments, []);\n    useEffect(fetchLikes, []);\n\n    const updateImage = () => {\n        setEditing(true);\n    };\n\n    const updateRes = async (obj: EditImageResponse) => {\n        setEditing(false);\n        if (obj.changed) {\n            const info = await obj.res.json(); \n            setResponse(String(info));\n\n            if (Number(obj.res.status) === 200) {\n                obj.newTitle !== title && setTitle(obj.newTitle);\n                obj.newUrl !== url && setUrl(obj.newUrl);\n            }\n        }\n    }\n\n    const likeImage = (imageId: number) => {\n        const userId = String(localStorage.getItem('id'));\n        fetch(`${process.env.REACT_APP_API_URL}/likes`, {\n            method: 'POST',\n            headers: new Headers({\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json',\n            }),\n            body: JSON.stringify({ userId, imageId }),\n        }).then(async (res) => {\n            // Report only if error\n            if (res.status !== 200) {\n                alert(await res.json());\n            }\n            setLike(true);\n            fetchLikes();\n        });\n    };\n\n    const deleteLike = (id: number) => {\n        fetch(`${process.env.REACT_APP_API_URL}/likes/id/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n            })\n        }).then(async (res) => {\n            // Report only if error\n            if (res.status !== 200) {\n                alert(await res.json());\n            }\n            const newLikes: Like[] = likes.filter(l => l.id !== id);\n            setLikes(newLikes);\n            const newStatus = false;\n            setLike(newStatus);\n        });\n    }\n\n    return (\n        <div>\n            <img key={myProps.id} src={url} alt={title} />\n            {(admin || String(myProps.userId) === userId) ? <div id='button-bar'>\n                <DefaultButton id={myProps.id} onClick={myProps.delete} name='Delete' />\n                <EditButton item={myProps} onClick={updateImage} />\n                {editing && <ImageModal id={myProps.id} title={title} url={url}\n                    func={updateRes} />}\n                {alreadyLiked\n                    ? <DefaultButton id={myLike?.id} onClick={deleteLike} name='Unlike' />\n                    : <DefaultButton id={myProps.id} onClick={likeImage} name='Like' />}\n                <div>{apiResponse}</div>\n            </div> : null}\n            {likes.length > 0 && (\n                <div onMouseEnter={onHover} onMouseLeave={onLeave}>\n                    { hover\n                        ? <div>\n                            <ul>\n                                {likes.map(l =>\n                                    <li\n                                        key={`like-user-${l.userId}`}\n                                        style={{ listStyle: 'none' }}\n                                    >{`${l.user?.firstName} ${l.user?.lastName}`}</li>\n                                )}\n                                liked this image\n                            </ul>\n                        </div>\n                        : <div>\n                            {likes.length} {likes.length > 1 ? 'Likes' : 'Like'}\n                        </div>}\n                </div>\n            )}\n            <CommentList array={comments} imageId={myProps.id} loginStatus={loggedIn} />\n        </div>\n    );\n};\n","import { useState, useEffect } from 'react';\nimport { BasicProps } from '../interfaces/BasicProps';\nimport { ImageObject } from '../interfaces/ImageObject';\nimport { Image } from './Image';\nimport { Button, TextField } from '@material-ui/core';\n\nconst Home = (props: BasicProps) => {\n    const loginStatus = Boolean(props.value);\n    const [selectedImages, setSelected] = useState([\n        { id: 0, title: '', url: '' },\n    ]);\n    const [url, setUrl] = useState('');\n    const [title, setTitle] = useState('');\n    const [postResponse, setResponse] = useState('');\n    const [displayForm, toggleDisplay] = useState(false);\n\n    const fetchAll = () => {\n        const apiUrl = `${process.env.REACT_APP_API_URL}/images/all`;\n        let imageList: ImageObject[] = [];\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then((data) => {\n                data.forEach((element: ImageObject) => {\n                    imageList.push(element);\n                });\n                setSelected(imageList);\n            })\n            .catch((error) => console.error(error));\n    };\n\n    const toggleDisplayForm = () => {\n        toggleDisplay(!displayForm);\n    }\n\n    const postImage = () => {\n        const token = localStorage.getItem('token');\n        const userId = localStorage.getItem('id');\n        fetch(`${process.env.REACT_APP_API_URL}/images`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({title, url, userId})\n        }).then(async res => {\n            setResponse(await res.json());\n            toggleDisplay(false);\n            fetchAll();\n        }\n        );\n    }\n\n    const updateTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.target.value);\n    }\n\n    const updateUrl = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUrl(e.target.value);\n    }\n\n    const deleteImage = (id: number) => {\n        const token = `Bearer ${localStorage.getItem('token')}`;\n\n        if (window.confirm('Are you sure you want to delete this image?')) {\n            // send delete request to backend\n            const url = `${process.env.REACT_APP_API_URL}/images/id/${id}`;\n            fetch(url, {\n                method: 'DELETE',\n                headers: new Headers({ Authorization: token }),\n            }).then(async (response) => {\n                const feedback = await response.json();\n                alert(feedback);\n                if(response.status === 200){\n                    const filteredImages = selectedImages.filter(img => img.id !== id);\n                    setSelected(filteredImages);\n                }\n            });\n        }\n    };\n\n    useEffect(fetchAll, []);\n\n    return (\n        <div>\n            <div>\n                {loginStatus && <Button onClick={toggleDisplayForm}>Post New Image</Button>}\n                {displayForm &&\n                    <div id=\"post-form\">\n                        <TextField \n                            id='title'\n                            label='title'\n                            onChange={updateTitle}/>\n                        <TextField \n                            id='url'\n                            label='url'\n                            onChange={updateUrl}/>\n                        <Button onClick={postImage}>Post</Button>\n                        <Button onClick={toggleDisplayForm}>Cancel</Button>\n                    </div>\n                }\n                <div>{postResponse}</div>\n            </div>\n            <div id=\"image-grid\">\n                {selectedImages.map(\n                    (image: ImageObject) =>\n                        image.title !== '' && (\n                            <Image {...image} key={image.id} loginStatus={loginStatus} delete={deleteImage}/>\n                        )\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    TextField,\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n} from '@material-ui/core';\nimport './App.scss';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { Link } from 'react-router-dom';\nimport { BasicProps } from '../interfaces/BasicProps';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props: BasicProps) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginStatus, setStatus] = useState('');\n    const [hidden, toggleShow] = useState(true);\n\n    const switching = (\n    ) => {\n        toggleShow(!hidden);\n    }\n\n    const history = useHistory(); \n\n    const submit = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n       \n        const apiUrl = `${process.env.REACT_APP_API_URL}/login`;\n        // fetch request using apiUrl and credentials\n        fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n            // should return error or token\n        }).then(async (response) => {\n            if (response.status === 401) {\n                setStatus(await response.json());\n            } else {\n                // remove any previous error messages\n                setStatus('Successfully logged in!');\n                // get credentials and store in Local Storage\n                const cred = await response.json();\n                \n                localStorage.setItem('id', cred.userId);\n                localStorage.setItem('admin', cred.admin);\n                localStorage.setItem('token', cred.token);\n\n                props.onChange !== undefined && props.onChange(true);\n                // redirect to home\n                history.push('/');\n            }\n        });\n    };\n\n    const updateUsername = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setUsername(event.target.value);\n    };\n\n    const updatePassword = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setPassword(event.target.value);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\" style={{ background: '#61dafb' }}>\n                <Toolbar style={{ flex: 1 }}>\n                    <Typography variant=\"h3\">Login</Typography>\n                </Toolbar>\n            </AppBar>\n            <form noValidate onSubmit={submit}>\n                <div id='grid'>\n                    <div id='textboxes'>\n                    <TextField\n                        id=\"username\"\n                        label=\"Username\"\n                        variant=\"outlined\"\n                        onChange={updateUsername}\n                    />\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            type={hidden ? 'password' : 'text'}\n                            onChange={updatePassword}\n                        />\n                        </div>\n                        <div id='column2'>\n                            <div id='empty'></div>\n                            <div>\n                                <IconButton onClick={switching}>\n                                    {hidden ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                                </IconButton>\n                            </div>\n                        </div>\n                </div>\n                <Button type='submit'>Submit</Button>\n            </form>\n            <div>{loginStatus}</div>\n            <Link to='/signup'>\n                <Button>Sign Up</Button>\n            </Link>\n        </div>\n    );\n};\nexport default Login;\n","import {\n    Button, TextField, RadioGroup,\n    FormControl, FormControlLabel, Radio, FormLabel, IconButton\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\ninterface UserModalProps {\n    id: number;\n    username: string;\n    password?: string;\n    firstName?: string;\n    lastName?: string;\n    admin: Boolean;\n    func: Function;\n}\n\nexport const UserModal = (props: UserModalProps) => {\n    const { id, username, password, firstName, lastName, admin } = props;\n    const [newUsername, setUsername] = useState(username);\n    const [newPassword, setPassword] = useState(password);\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [newFirstName, setFirstName] = useState(firstName);\n    const [newLastName, setLastName] = useState(lastName);\n\n    const [hidden, toggleShow] = useState(true);\n    const [apiResponse, setResponse] = useState('');\n\n    const switching = (\n    ) => {\n        toggleShow(!hidden);\n    }\n\n    let val = '';\n    admin ? val = 'admin' : val = 'standard';\n    const [newAdmin, setAdmin] = useState(val);\n    const [origPwd, setOrigPwd] = useState('');\n    const [passwordError, setPwdErr] = useState(false);\n\n\n    const updateUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setUsername(event.target.value);\n    }\n\n    const updatePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value);\n    }\n\n    const updatePrevPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOrigPwd(event.target.value);\n    }\n\n    const updateConfirmPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setConfirmPassword(event.target.value);\n        setPwdErr(event.target.value !== newPassword);\n    }\n\n    const updateFirstName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFirstName(event.target.value);\n    }\n\n    const updateLastName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setLastName(event.target.value);\n    }\n\n    const updateAdminStatus = (event: any) => {\n        setAdmin(event.target.value);\n    }\n\n\n    const editUser = () => {\n        const token = localStorage.getItem('token');\n\n        fetch(`${process.env.REACT_APP_API_URL}/login`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ username, 'password': origPwd }),\n        }\n        ).then(async response => {\n            if (response.status !== 200) {\n                const data = await response.json();\n                setResponse(data);\n            } else {\n                let putBody = {};\n                if (newPassword === password) {\n                    putBody = {\n                        'username': newUsername,\n                        'firstName': newFirstName,\n                        'lastName': newLastName,\n                        'admin': newAdmin === 'admin' ? true : false\n                    };\n                } else {\n                    putBody = {\n                        'username': newUsername,\n                        'password': newPassword,\n                        'firstName': newFirstName,\n                        'lastName': newLastName,\n                        'admin': newAdmin === 'admin' ? true : false\n                    };\n                }\n                fetch(`${process.env.REACT_APP_API_URL}/users/id/${id}`, {\n                    method: 'PUT',\n                    headers: {\n                        'Content-type': 'application/json',\n                        'Authorization': `Bearer ${token}`\n                    },\n                    body: JSON.stringify(putBody)\n                }).then(async res => {\n                    const data = res;\n                    alert((await data.text()).replace(/\"/g, ''));\n                    props.func({ 'res': data, newFirstName, newLastName, 'newAdminStatus': newAdmin, newUsername, changed: true });\n                }\n                )\n            }\n        }\n        )\n    }\n\n    const cancel = () => {\n        props.func({ changed: false });\n    }\n\n    return (\n        <div className='modal' id='modal-grid'>\n            <div id='main-column'>\n                <form>\n                    <TextField label='New Username' variant='outlined' onChange={updateUsername} />\n                    <TextField label='Original Password' variant='outlined' onChange={updatePrevPassword}\n                        type={hidden ? 'password' : 'text'} />\n\n                    <TextField label='New Password' variant='outlined' onChange={updatePassword}\n                        type={hidden ? 'password' : 'text'} />\n                    <TextField label='Re-enter New Password' variant='outlined' onChange={updateConfirmPassword}\n                        type={hidden ? 'password' : 'text'} />\n                    {passwordError && <div>Passwords don't match</div>}\n\n                    <TextField label='New First Name' variant='outlined' onChange={updateFirstName} />\n                    <TextField label='New Last Name' variant='outlined' onChange={updateLastName} />\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Admin Status</FormLabel>\n                        <RadioGroup aria-label='admin-status' name='admin1' value={newAdmin} onChange={updateAdminStatus}>\n                            <FormControlLabel value='admin' control={<Radio />} label=\"Admin\" />\n                            <FormControlLabel value='standard' control={<Radio />} label=\"Standard User\" />\n                        </RadioGroup>\n                    </FormControl>\n                    <Button onClick={editUser} disabled={passwordError}>Submit</Button>\n                    <Button onClick={cancel}>Cancel</Button>\n                    {apiResponse}\n                </form>\n            </div>\n            <div id='side-column'>\n                <IconButton onClick={switching}>\n                    {hidden ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                </IconButton>\n                <div>\n\n                </div>\n            </div>\n\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { EditUserResponse } from \"../interfaces/EditUserResponse\";\nimport { User as UserInterface } from \"../interfaces/User\";\nimport { DefaultButton } from './DefaultButton';\nimport { EditButton } from './EditButton';\nimport { UserModal } from './UserModal';\n\ninterface UserProps {\n    user: UserInterface;\n    activeUser: string;\n    deleteFunc: Function;\n}\n\nconst User = (props: UserProps) => {\n    const { user, activeUser, deleteFunc } = props;\n\n    const active = activeUser === String(user.id);\n    const admin = localStorage.getItem('admin') === 'true';\n    const [editing, setEditing] = useState(false);\n\n    const [firstName, setFirstName] = useState(user.firstName);\n    const [username, setUsername] = useState(user.username);\n    const [lastName, setLastName] = useState(user.lastName);\n    const [adminStatus, setAdminStatus] = useState(user.admin);\n\n    const startEditing = () => {\n        setEditing(true);\n    }\n\n    const processResponse = async (obj: EditUserResponse) => {\n        setEditing(false);\n        if (obj.changed) {\n            if (Number(obj.res.status) === 200) {\n                obj.newFirstName !== firstName && setFirstName(obj.newFirstName);\n                obj.newLastName !== lastName && setLastName(obj.newLastName);\n                obj.newUsername !== username && setUsername(obj.newUsername);\n                obj.newAdminStatus !== adminStatus && setAdminStatus(obj.newAdminStatus);\n            }\n        }\n\n    }\n\n    return (\n        <div className={active ? 'active-user' : 'inactive'}>\n            <h2>{`${firstName} ${lastName}`}</h2>\n            <h3>{username}</h3>\n            {adminStatus ? <h3>Admin</h3> : <h3>Standard User</h3>}\n            {(admin || activeUser === String(user.id)) ? <div>\n                <DefaultButton id={user.id} onClick={deleteFunc} name='Delete' />\n                <EditButton item={user} onClick={startEditing} />\n            </div> : null}\n            {editing && <div><UserModal id={user.id} username={username}\n                firstName={firstName} lastName={lastName}\n                password={user.password} admin={adminStatus} func={processResponse} /></div>}\n        </div>\n    )\n};\n\nexport default User;\n","import { useState, useEffect } from 'react';\nimport { User as UserInterface } from '../interfaces/User';\n\nimport User from \"./User\"\n\ninterface UserListProps {\n    value: string | null;\n}\n\nconst UserList = (props: UserListProps) => {\n    const [users, setUsers] = useState<UserInterface[]>([]);\n    const [apiResponse, setResponse] = useState('');\n\n    const fetchAll = () => {\n        const apiUrl = `${process.env.REACT_APP_API_URL}/users/all`;\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then((data) => {\n                setUsers(data);\n            })\n            .catch((error) => console.error(error));\n    };\n\n    const deleteUser = (id: number) => {\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            const token = `Bearer ${localStorage.getItem('token')}`;\n            fetch(`http://localhost:8080/users/id/${id}`,\n                {\n                    method: 'DELETE',\n                    headers: new Headers({ Authorization: token }),\n                }).then(async res => {\n                    setResponse(await res.json());\n                    if (res.status === 200) {\n                        const filteredUsers = users.filter(u => u.id !== id);\n                        setUsers(filteredUsers);\n                    }\n                }\n                )\n        }\n    }\n\n    useEffect(fetchAll, []);\n\n    return (\n        <div>\n            <ul>\n                {users.map(user =>\n                    <li key={user.id}>\n                        <User user={user} activeUser={String(props.value)}\n                            deleteFunc={deleteUser} />\n                    </li>\n                )\n                }\n            </ul>\n            {apiResponse}\n        </div>\n    )\n};\n\nexport default UserList;\n","import { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport './App.scss';\nimport { NavLink } from 'react-router-dom';\nimport { BasicProps } from '../interfaces/BasicProps';\n\nexport const AppHeader = (props: BasicProps) => {\n    return (\n        <div className=\"title\">\n            <AppBar position=\"static\" style={{ background: '#61dafb' }}>\n                <Toolbar style={{ flex: 1 }}>\n                    <Typography variant=\"h3\">CatBook</Typography>\n                    <NavLink\n                        exact\n                        to=\"/\"\n                        activeStyle={{ fontWeight: 'bold' }}\n                        className=\"NavLink\"\n                    >\n                        Images\n                    </NavLink>\n                    <NavLink\n                        exact\n                        to=\"/users\"\n                        activeStyle={{ fontWeight: 'bold' }}\n                        className=\"NavLink\"\n                    >\n                        Users\n                    </NavLink>\n                    {!props.value ? (\n                        <NavLink to=\"/login\">\n                            <Button id=\"headerBtn\">Login</Button>\n                        </NavLink>\n                    ) : (\n                        <Button id=\"headerBtn\" onClick={props.onChange}>\n                            Logout\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import {\n    Button,\n    TextField,\n    IconButton\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport './App.scss';\nimport { Link } from 'react-router-dom';\nimport { useState, FormEvent } from 'react';\n\nconst Signup = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordRepeat, setRepeat] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [loginStatus, setStatus] = useState('');\n    const [hidden, toggleShow] = useState(true);\n\n    const switching = (\n        ) => {\n            toggleShow(!hidden);\n        }\n\n    const submit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        // check that password was correctly entered\n        if (password !== passwordRepeat) {\n            setStatus('Error: Passwords do not match');\n        } else {\n            setStatus('');\n        }\n        // Send fetch request to backend to create user\n        const apiUrl = `${process.env.REACT_APP_API_URL}/users`;\n        fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ username, password, firstName, lastName }),\n            // should return error or token\n        }).then(async (response) => {\n            if (response.status === 401) {\n                setStatus(await response.json());\n            } else {\n                // remove any previous error messages\n                setStatus('Successfully created user!');\n                // get credentials and store in Local Storage\n                const cred = await response.json();\n                console.log(cred);\n                // Get token and store in local storage\n                localStorage.setItem('token', cred.token);\n                localStorage.setItem('id', cred.userId);\n                localStorage.setItem('admin', cred.admin);\n            }\n        });\n    }\n\n    const updateUsername = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setUsername(event.target.value);\n    };\n\n    const updatePassword = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setPassword(event.target.value);\n    };\n\n    const updateRepeat = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setRepeat(event.target.value);\n    };\n\n    const updateFirstName = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setFirstName(event.target.value);\n    };\n\n    const updateLastName = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setLastName(event.target.value);\n    };\n\n    return (<div>\n        <form noValidate onSubmit={submit}>\n            <div id='grid'>\n                <div id='textboxes'>\n                    <TextField\n                        id=\"username\"\n                        label=\"Username\"\n                        variant=\"outlined\"\n                        onChange={updateUsername}\n                    />\n                    <TextField\n                        id=\"password\"\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        type={hidden ? 'password' : 'text'}\n                        onChange={updatePassword}\n                    />\n                    <TextField\n                        id=\"confirm-password\"\n                        label=\"Re-enter Password\"\n                        variant=\"outlined\"\n                        type={hidden ? 'password' : 'text'}\n                        onChange={updateRepeat}\n                    />\n                    <TextField\n                        id=\"first-name\"\n                        label=\"First Name\"\n                        variant=\"outlined\"\n                        onChange={updateFirstName}\n                    />\n                    <TextField\n                        id=\"last-name\"\n                        label=\"Last Name\"\n                        variant=\"outlined\"\n                        onChange={updateLastName}\n                    />\n                </div>\n                <div id='sign-up-column2'>\n                    <div>\n                        <IconButton onClick={switching}>\n                            {hidden ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n            <div>{loginStatus}</div>\n            <Button type='submit'>Submit</Button>\n            <Link to='/login'>\n                <Button>\n                    Return to Login\n                </Button>\n            </Link>\n        </form>\n    </div>\n    )\n};\n\nexport default Signup;\n","import './App.scss';\nimport Home from './Home';\nimport Login from './Login';\nimport UserList from './UserList';\nimport { Route } from 'react-router-dom';\nimport { AppHeader } from './AppHeader';\nimport Signup from './Signup';\nimport { useState } from 'react';\n\nconst App = () => {\n    const user = localStorage.getItem('id');\n    console.log(user);\n    const [loginStatus, setStatus] = useState(user !== undefined && user !== null);\n\n    const logout = () => {\n        localStorage.removeItem('id');\n        localStorage.removeItem('admin');\n        localStorage.removeItem('token');\n        const newStatus = false;\n        setStatus(newStatus);\n        console.log('logging out');\n    };\n\n    const update = (result: boolean) => {\n        setStatus(result);\n    }\n\n    return (\n        <div className=\"App\">\n            <AppHeader value={loginStatus} onChange={logout}/>\n            <Route exact path='/' render={() => (<Home value={loginStatus}/>)}/>\n            <Route path='/login' \n                render={() => (<Login onChange={update} />)}\n             />\n            <Route path='/users' render={() => (<UserList value={user}/>)}/>\n            <Route path='/signup' component={Signup}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}