{"version":3,"sources":["Home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Home","state","allImages","selectedImages","fetchAll","apiUrl","process","imageList","fetch","then","response","json","data","forEach","element","push","setState","catch","error","console","displayAll","fetchById","event","id","target","value","dotenv","this","onClick","onChange","map","i","data-testid","title","image","src","url","alt","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA0EeA,E,4MAhEXC,MAAQ,CACJC,UAAW,GACXC,eAAgB,I,EAQpBC,SAAW,WACP,IAAMC,EAAM,UAAMC,gEAAN,QACRC,EAA2B,GAC/BC,MAAMH,GACDI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHA,EAAKC,SAAQ,SAACC,GACVP,EAAUQ,KAAKD,MAEnB,EAAKE,SAAS,CAAEd,UAAWK,OAE9BU,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,O,EAGxCE,WAAa,WACT,EAAKJ,SAAS,CAAEb,eAAgB,EAAKF,MAAMC,a,EAG/CmB,UAAY,SAACC,GACT,IAAMC,EAAKD,EAAME,OAAOC,MAClBpB,EAAM,UAAMC,gEAAN,eAA0CiB,GACtDf,MAAMH,GACDI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,EAAKI,SAAS,CAAEb,eAAgBS,Q,uDA7B5C,WACIc,WACAC,KAAKvB,a,oBA8BT,WACI,OACI,gCACI,8CACA,wBAAQwB,QAASD,KAAKP,WAAtB,qBACA,gCACI,gDACA,yBAAQS,SAAUF,KAAKN,UAAvB,UACI,oDACCM,KAAK1B,MAAMC,UAAU4B,KAAI,SAACC,GAAD,OACtB,wBAAQN,MAAOM,EAAER,GAAeS,cAAY,gBAA5C,SACKD,EAAEE,OADmBF,EAAER,aAMxC,qBAAKA,GAAG,aAAR,SACKI,KAAK1B,MAAME,eAAe2B,KAAI,SAACI,GAAD,OAC3B,qBAAoBC,IAAKD,EAAME,IAAKC,IAAKH,EAAMD,OAArCC,EAAMX,gB,GAxDrBe,IAAMC,WCEVC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aad6d298.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as dotenv from 'dotenv';\r\n\r\ninterface imageObject {\r\n    id: number;\r\n    title: string;\r\n    url: string;\r\n}\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        allImages: [],\r\n        selectedImages: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        dotenv.config();\r\n        this.fetchAll();\r\n    }\r\n\r\n    fetchAll = () => {\r\n        const apiUrl = `${process.env.REACT_APP_API_URL}/all`;\r\n        let imageList: imageObject[] = [];\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                data.forEach((element: imageObject) => {\r\n                    imageList.push(element);\r\n                });\r\n                this.setState({ allImages: imageList });\r\n            })\r\n            .catch((error) => console.error(error));\r\n    };\r\n\r\n    displayAll = () => {\r\n        this.setState({ selectedImages: this.state.allImages });\r\n    };\r\n\r\n    fetchById = (event: any) => {\r\n        const id = event.target.value;\r\n        const apiUrl = `${process.env.REACT_APP_API_URL}/id/${id}`;\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ selectedImages: data });\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Cat Pictures</h1>\r\n                <button onClick={this.displayAll}>See All</button>\r\n                <div>\r\n                    <h2>Pick By Title:</h2>\r\n                    <select onChange={this.fetchById}>\r\n                        <option>Select a title</option>\r\n                        {this.state.allImages.map((i: imageObject) => (\r\n                            <option value={i.id} key={i.id} data-testid=\"select-option\">\r\n                                {i.title}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div id=\"image-grid\">\r\n                    {this.state.selectedImages.map((image: imageObject) => (\r\n                        <img key={image.id} src={image.url} alt={image.title} />\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import './App.scss';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}